name: CI

on: [push, pull_request]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  tests:
    strategy:
      matrix:
        go-version: [1.x, 1.16.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - go-version: 1.x
            platform: ubuntu-latest
            update-coverage: true
    runs-on: ${{ matrix.platform }}
    needs: [setup]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Run go fmt
        if: runner.os != 'Windows'
        run: diff -u <(echo -n) <(gofmt -d -s .)

      - name: Ensure go generate produces a zero diff
        shell: bash
        run: go generate -x ./... && git diff --exit-code; code=$?; git checkout -- .; (exit $code)

      - name: Run go vet
        run: go vet ./...

      - name: Run go test
        run: go test -v -race -coverprofile coverage.txt ./...

      - name: Upload coverage to Codecov
        if: ${{ matrix.update-coverage }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  chopchop-endpoint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
     - uses: actions/checkout@v1
     - run: |
        cat chopchop.yml | grep "uri:" | sort | uniq -c | sort -n
        test=`cat chopchop.yml | grep "endpoint:" | sort | uniq -c | grep -v 1 | wc -l`
        if [ $test != 0 ]; then echo "There shouldn't be multiple (and identical) 'endpoint'. It should be refactored. "; exit 1; fi
  
  go-lint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      
      - name: go-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.39.0
          golangci-lint run

  yaml-lint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: chopchop.yml
          config_file: .github/.yamllint.yml

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [tests, chopchop-endpoint, go-lint, yaml-lint]
    if: ${{ github.event_name == 'push' }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache go modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: ${{ runner.os }}-go-

    - name: Install gox
      run: go get github.com/mitchellh/gox

    - name: Build using gox
      run: |
        cd cmd
        gox -ldflags "-X main.Version=$BUILD_VERSION -X main.BuildDate=$BUILD_DATE" \
          -output "../artifacts/ChopChop_{{.OS}}_{{.Arch}}" \
          -osarch="!darwin/386"

    - name: Upload ChopChop builds
      uses: actions/upload-artifact@v2
      with:
        name: chopchop-artifacts
        path: artifacts/*

    - name: Release
      uses: fnkr/github-action-ghr@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GHR_COMPRESS: gz
        GHR_PATH: artifacts/
        GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
